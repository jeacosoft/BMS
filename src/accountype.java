/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author AnthonyCee
 */
public class accountype extends javax.swing.JInternalFrame {
Connection con = myconnect.getConnection();
//Connection con = myconnect2.ConnectDb();
        PreparedStatement ps;
        ResultSet rs;
    
    /**
     * Creates new form accountype
     */
    public accountype() {
        initComponents();
        populatecombocstid();
        populatecombobranch();
        fetchdata();
    }

    
    
      public void populatecombocstid(){
    try {
        String sql = "select * from customertable";
        ps = con.prepareStatement(sql);
        rs = ps.executeQuery();
        while(rs.next()){
        custid.addItem(rs.getString("CustomerID"));
        
        }
    } catch (SQLException ex) {
        Logger.getLogger(accountype.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    
    
    }
    //populating the branch combobox
 public void populatecombobranch(){
    try {
        String sql = "select * from`branchtable`";
        ps = con.prepareStatement(sql);
        rs = ps.executeQuery();
        while(rs.next()){
        branch.addItem(rs.getString("Branch"));
        
        }
    } catch (SQLException ex) {
        Logger.getLogger(accountype.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        custid = new javax.swing.JComboBox<>();
        txtcstname = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tblaccountmst = new javax.swing.JTable();
        acctype = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        branch = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtaccno = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        activeness = new javax.swing.JCheckBox();
        btnUpdate1 = new javax.swing.JButton();
        btnCler1 = new javax.swing.JButton();
        btnDelt1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("ACCOUNT TYPE");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/sunlog.png"))); // NOI18N

        jLabel6.setText("Customer ID");

        custid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select CustomerID" }));
        custid.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                custidPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        custid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custidActionPerformed(evt);
            }
        });

        txtcstname.setEnabled(false);

        Tblaccountmst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TblaccountmstMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Tblaccountmst);

        acctype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Account", "Savings", "Current", "Fix Deposit","Joint","Corperate" }));
        acctype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acctypeActionPerformed(evt);
            }
        });

        jLabel7.setText("Account Type");

        branch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Branch" }));
        branch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                branchActionPerformed(evt);
            }
        });

        jLabel8.setText("Branch");

        jLabel9.setText("Customer Name");

        txtaccno.setEnabled(false);

        jLabel10.setText("Account No");

        activeness.setText("Account Activeness");

        btnUpdate1.setText("Save");
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        btnCler1.setText("Clear");
        btnCler1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCler1ActionPerformed(evt);
            }
        });

        btnDelt1.setText("Delete");
        btnDelt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelt1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(custid, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(18, 18, 18)
                            .addComponent(acctype, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(51, 51, 51)
                            .addComponent(branch, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtaccno, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnCler1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(activeness))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtcstname, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(btnUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelt1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(custid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(acctype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtaccno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(branch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(activeness))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 260, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCler1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelt1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addGap(148, 148, 148)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                    .addGap(89, 89, 89)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 563, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 453, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void fetchdata(){
    
      
        try {
              String q = "select CustomerID, AccountNO, Name ,`CustomerActiveness`, `AccountType`, `Branch` from customertable";
            ps = con.prepareStatement(q);
             rs = ps.executeQuery();
             
            Tblaccountmst.setModel(DbUtils.resultSetToTableModel(rs)); 
             
        } catch (SQLException ex) {
            
            Logger.getLogger(employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    
     
       
   } 

    private void custidPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_custidPopupMenuWillBecomeInvisible
        try {
            // displaying the corresponding value of selected combobox item on th textfied
            String combo = (String)custid.getSelectedItem();
            String sql ="select * from customertable where CustomerID = ?";
            ps = con.prepareStatement(sql);
            ps . setString(1,combo);
            rs = ps.executeQuery();
            if (rs.next()){
                String add1 = rs.getString("Name");
                txtcstname.setText(add1);
                String add2 = rs.getString("AccountNo");
                txtaccno.setText(add2);
                String active = rs.getString("CustomerActiveness");

                if (active .equals("Active")){
                    activeness.setSelected(true);

                }else{
                    activeness.setSelected(false);
                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(accountype.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_custidPopupMenuWillBecomeInvisible

    private void custidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custidActionPerformed

    private void TblaccountmstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TblaccountmstMouseClicked
        // TODO add your handling code here:

        int i =    Tblaccountmst.getSelectedRow();
        TableModel model =    Tblaccountmst.getModel();
        // txtid.setText(model.getValueAt(i,0).toString());
        custid.setSelectedItem(model.getValueAt(i,0).toString());
        txtaccno.setText(model.getValueAt(i,1).toString());
        txtcstname.setText(model.getValueAt(i,2).toString());
        String active = (model.getValueAt(i,3).toString());
        if(active.equals("Active")){

            activeness.setSelected(true);}else
        {activeness.setSelected(false);}

        acctype.setSelectedItem(model.getValueAt(i,4).toString());
        branch.setSelectedItem(model.getValueAt(i,5).toString());

    }//GEN-LAST:event_TblaccountmstMouseClicked

    private void acctypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acctypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acctypeActionPerformed

    private void branchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_branchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_branchActionPerformed

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        String active = null;
        if(activeness.isSelected()== true){
            active = "Active";
        }else{
            active = "Not Active";
        }
        int res = JOptionPane.showConfirmDialog(null, "Are you sure you want Save this Record?", "Comfirmation",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        // TODO add your handling code here:
        if(acctype.getSelectedItem().equals("Select Account") || branch.getSelectedItem().equals("Select Branch")){

            JOptionPane.showMessageDialog(this, "Some of these Options are missing Please select from the Combobox Concerned to continue");
        }else{
            try {
                ps = con.prepareStatement("UPDATE customertable SET AccountNO = '"+txtaccno.getText()+"' , CustomerActiveness ='"+active+"', AccountType = '"+ acctype.getSelectedItem().toString() +"', Branch = '"+ branch.getSelectedItem().toString() +"' WHERE CustomerID = '"+custid.getSelectedItem().toString() +"'");
                if(res == JOptionPane.YES_OPTION){
                    int n1 =  ps.executeUpdate();
                    if (n1 >0){

                        JOptionPane.showMessageDialog(null,"Record Updated Successfully");
                        fetchdata();
                    }
                }else{}
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Record Updated failed");
                Logger.getLogger(accountype.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void btnCler1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCler1ActionPerformed
        // clear
        custid.setSelectedItem(null);
        txtaccno.setText(null);
        txtcstname.setText(null);

        activeness.setSelected(false);

        acctype.setSelectedItem(null);
        branch.setSelectedItem(null);

    }//GEN-LAST:event_btnCler1ActionPerformed

    private void btnDelt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelt1ActionPerformed
        // TODO add your handling code here:
        try {
            ps = con.prepareStatement("DELETE FROM customertable  WHERE CustomerID = '"+ custid.getSelectedItem().toString() +"'");
            int n1 =  ps.executeUpdate();
            if (n1>0){

                JOptionPane.showMessageDialog(null, "Deleted Successful");
                fetchdata();
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Delete not Successful");
            Logger.getLogger(employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDelt1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tblaccountmst;
    private javax.swing.JComboBox<String> acctype;
    private javax.swing.JCheckBox activeness;
    private javax.swing.JComboBox<String> branch;
    private javax.swing.JButton btnCler1;
    private javax.swing.JButton btnDelt1;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JComboBox<String> custid;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtaccno;
    private javax.swing.JTextField txtcstname;
    // End of variables declaration//GEN-END:variables
}
