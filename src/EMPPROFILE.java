/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Image;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author AnthonyCee
 */
public class EMPPROFILE extends javax.swing.JInternalFrame {
Connection con = myconnect.getConnection();
      //Connection con = myconnect2.ConnectDb();
        PreparedStatement ps;
        ResultSet rs;
    /**
     * Creates new form EMPPROFILE
     */
    public EMPPROFILE() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        Searchby = new javax.swing.JComboBox<>();
        txtsearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passp = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Search Employee Profile");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/sunlog.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(544, 590));

        jLabel1.setText("Search By");

        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        display.setEditable(false);
        display.setColumns(20);
        display.setRows(5);
        jScrollPane1.setViewportView(display);

        Searchby.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select SearchKey", "EmpCode", "Email ID", "Phone No","Name" }));

        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        jLabel2.setText("Search Key");

        passp.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 204, 204)));

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(Searchby, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(30, 30, 30)
                                .addComponent(jButton3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                        .addComponent(passp, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(Searchby, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(passp, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 528, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // printing
            display.print();
        } catch (PrinterException ex) {
            Logger.getLogger(EMPPROFILE.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // SEARCH AT KEY RELEASE

        String searchKey = Searchby.getSelectedItem().toString();
        switch(searchKey){

            case "EmpCode":

            try {
                String q = "select * from register where EmpCode = '"+txtsearch.getText()+"'";
                ps = con.prepareStatement(q);
                rs = ps.executeQuery();

                if(rs.next()){
                    //this will append of display the values of the text box
                    //this will append of display the values of the text box
                    byte[] img = null;
                    img =  rs.getBytes("Passport");
                    ImageIcon image = new ImageIcon(img);
                    Image im = image.getImage();
                    Image myImg = im.getScaledInstance(   passp.getWidth(),   passp.getHeight(),Image.SCALE_SMOOTH);
                    ImageIcon newImage = new ImageIcon(myImg);

                    passp.setIcon(newImage);

                    display.append("\t\nORIENT BANK OF THE NATION :\n\n" +
                        "\n=============================================\n"  +
                        "Employee ID :\t\t " + rs.getString("EmpCode") +

                        "\n\nAccount Name:\t\t " +  rs.getString("Name") +
                        "\n\nUsername :\t\t " + rs.getString("Username") +
                        "\n\nSex:\t\t " +rs.getString("Sex")  +
                        "\n\nDate of Birth:\t\t " +rs.getString("DOB") +
                        "\n\nEmail ID :\t\t " + rs.getString("EmailID") +
                        "\n\nPhone No:\t\t " + rs.getString("PhoneNo") +
                        "\n\nEmployee Activeness:\t" + rs.getString("EmployeeActiveness") +
                        "\n\nEmployment Type:\t " + rs.getString("EmpType") +

                        "\n=============================================\n"  +
                        "\n\nORIENT BANK OF THE NATION TEAM ");

                }

            } catch (SQLException ex) {

                Logger.getLogger(employee.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
            case "Phone No":
            try {
                String q = "select * from register where PhoneNo = '"+txtsearch.getText()+"'";
                ps = con.prepareStatement(q);
                rs = ps.executeQuery();

                if(rs.next()){
                    //this will append of display the values of the text box
                    //this will append of display the values of the text box
                    byte[] img = null;
                    img =  rs.getBytes("Passport");
                    ImageIcon image = new ImageIcon(img);
                    Image im = image.getImage();
                    Image myImg = im.getScaledInstance(   passp.getWidth(),   passp.getHeight(),Image.SCALE_SMOOTH);
                    ImageIcon newImage = new ImageIcon(myImg);

                    passp.setIcon(newImage);

                    display.append("\t\nORIENT BANK OF THE NATION :\n\n" +
                        "\n=============================================\n"  +
                        "Employee ID :\t\t " + rs.getString("EmpCode") +

                        "\n\nAccount Name:\t\t " +  rs.getString("Name") +
                        "\n\nUsername :\t\t " + rs.getString("Username") +
                        "\n\nSex:\t\t " +rs.getString("Sex")  +
                        "\n\nDate of Birth:\t\t " +rs.getString("DOB") +
                        "\n\nEmail ID :\t\t " + rs.getString("EmailID") +
                        "\n\nPhone No:\t\t " + rs.getString("PhoneNo") +
                        "\n\nEmployee Activeness:\t" + rs.getString("EmployeeActiveness") +
                        "\n\nEmployment Type:\t " + rs.getString("EmpType") +

                        "\n=============================================\n"  +
                        "\n\nORIENT BANK OF THE NATION TEAM ");

                }

            } catch (SQLException ex) {

                Logger.getLogger(employee.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;

            case "Email ID" :

            try {
                String q = "select * from register where EmailID = '"+txtsearch.getText()+"'";
                ps = con.prepareStatement(q);
                rs = ps.executeQuery();

                if(rs.next()){
                    //this will append of display the values of the text box
                    //this will append of display the values of the text box
                    byte[] img = null;
                    img =  rs.getBytes("Passport");
                    ImageIcon image = new ImageIcon(img);
                    Image im = image.getImage();
                    Image myImg = im.getScaledInstance(   passp.getWidth(),   passp.getHeight(),Image.SCALE_SMOOTH);
                    ImageIcon newImage = new ImageIcon(myImg);

                    passp.setIcon(newImage);

                    display.append("\t\nORIENT BANK OF THE NATION :\n\n" +
                        "\n=============================================\n"  +
                        "Employee ID :\t\t " + rs.getString("EmpCode") +

                        "\n\nAccount Name:\t\t " +  rs.getString("Name") +
                        "\n\nUsername :\t\t " + rs.getString("Username") +
                        "\n\nSex:\t\t " +rs.getString("Sex")  +
                        "\n\nDate of Birth:\t\t " +rs.getString("DOB") +
                        "\n\nEmail ID :\t\t " + rs.getString("EmailID") +
                        "\n\nPhone No:\t\t " + rs.getString("PhoneNo") +
                        "\n\nEmployee Activeness:\t" + rs.getString("EmployeeActiveness") +
                        "\n\nEmployment Type:\t " + rs.getString("EmpType") +

                        "\n=============================================\n"  +
                        "\n\nORIENT BANK OF THE NATION TEAM ");

                }

            } catch (SQLException ex) {

                Logger.getLogger(employee.class.getName()).log(Level.SEVERE, null, ex);
            }

            break;

            case "Name":

            try {
                String q = "select * from register where Name = '"+txtsearch.getText()+"'";
                ps = con.prepareStatement(q);
                rs = ps.executeQuery();

                if(rs.next()){
                    //this will append of display the values of the text box
                    //this will append of display the values of the text box
                    byte[] img = null;
                    img =  rs.getBytes("Passport");
                    ImageIcon image = new ImageIcon(img);
                    Image im = image.getImage();
                    Image myImg = im.getScaledInstance(   passp.getWidth(),   passp.getHeight(),Image.SCALE_SMOOTH);
                    ImageIcon newImage = new ImageIcon(myImg);

                    passp.setIcon(newImage);

                    display.append("\t\nORIENT BANK OF THE NATION :\n\n" +
                        "\n=============================================\n"  +
                        "Employee ID :\t\t " + rs.getString("EmpCode") +

                        "\n\nAccount Name:\t\t " +  rs.getString("Name") +
                        "\n\nUsername :\t\t " + rs.getString("Username") +
                        "\n\nSex:\t\t " +rs.getString("Sex")  +
                        "\n\nDate of Birth:\t\t " +rs.getString("DOB") +
                        "\n\nEmail ID :\t\t " + rs.getString("EmailID") +
                        "\n\nPhone No:\t\t " + rs.getString("PhoneNo") +
                        "\n\nEmployee Activeness:\t" + rs.getString("EmployeeActiveness") +
                        "\n\nEmployment Type:\t " + rs.getString("EmpType") +

                        "\n=============================================\n"  +
                        "\n\nORIENT BANK OF THE NATION TEAM ");

                }

            } catch (SQLException ex) {

                Logger.getLogger(employee.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
            default:
            JOptionPane.showMessageDialog(this, "Select Search Key from the Combobox Above");
            break;
        }

    }//GEN-LAST:event_txtsearchKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Clear
        display.setText("");
        txtsearch.setText("");
        passp.setIcon(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // close the frame alone and not the programe
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        this.hide();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Searchby;
    private javax.swing.JTextArea display;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel passp;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
