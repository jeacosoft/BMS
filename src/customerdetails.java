/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.  
 */

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author AnthonyCee
 */
public class customerdetails extends javax.swing.JInternalFrame {
Connection con = myconnect.getConnection();
     //Connection con = myconnect2.ConnectDb();
        PreparedStatement ps;
        ResultSet rs;
        int num1, num2,num3, num4,num5, num6;
        String q1,q2,q3,q4,q5,q6,m4;
     
    /**
     * Creates new form customerdetails
     */
    public customerdetails() {
        initComponents();
         fetchdata();
          cstdob.setDate(java.sql.Date.valueOf(java.time.LocalDate.now()));
    }

    
    public void fetchdata(){
    if(FRONTPAGE.copt.getSelectedItem() == "ADMIN"){
    
     try {
              String q = "select `CustomerID`,AccountNO,`Name`,`Sex`, `DOB`, `EmailID`, `MobileNo`, `Address`, `CustomerActiveness`,Branch ,AccountBalance,Username,PIN from customertable";
            ps = con.prepareStatement(q);
             rs = ps.executeQuery();
             
            Tblcdetails.setModel(DbUtils.resultSetToTableModel(rs)); 
             
        } catch (SQLException ex) {
            
            Logger.getLogger(employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }else{
      
        try {
              String q = "select `CustomerID`,AccountNO,`Name`,`Sex`, `DOB`, `EmailID`, `MobileNo`, `Address`, `CustomerActiveness`,Branch ,AccountBalance from customertable";
            ps = con.prepareStatement(q);
             rs = ps.executeQuery();
             
            Tblcdetails.setModel(DbUtils.resultSetToTableModel(rs)); 
             
        } catch (SQLException ex) {
            
            Logger.getLogger(employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
       
   } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pin = new javax.swing.JPasswordField();
        cstEmail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cstmob = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tblcdetails = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        custcode = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cstname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cstusername = new javax.swing.JTextField();
        cpassport = new javax.swing.JLabel();
        cstdob = new com.toedter.calendar.JDateChooser();
        tt = new javax.swing.JLabel();
        Csex = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Adress = new javax.swing.JTextArea();
        activeness = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnsubmit = new javax.swing.JButton();
        btnClare = new javax.swing.JButton();
        btnpaspt = new javax.swing.JButton();
        btnDelte = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        signature = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("CUSTOMER'S DETAILS");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/sunlog.png"))); // NOI18N

        pin.setEnabled(false);

        jLabel2.setText("Date of Birth");

        cstmob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cstmobActionPerformed(evt);
            }
        });

        jLabel3.setText("PIN");

        Tblcdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Tblcdetails.setEditingColumn(0);
        Tblcdetails.setEditingRow(0);
        Tblcdetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TblcdetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tblcdetails);

        jLabel4.setText("Email ID");

        custcode.setEnabled(false);

        jLabel5.setText("Address");

        jLabel6.setText("Mobile No");

        cpassport.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cpassport.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cpassport.setText("Passport");
        cpassport.setBorder(new javax.swing.border.MatteBorder(null));

        tt.setText("Name");

        Csex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Sex", "Male", "Female" }));

        jLabel10.setText("Customer ID");

        Adress.setColumns(20);
        Adress.setRows(5);
        jScrollPane2.setViewportView(Adress);

        activeness.setText("Customer Activeness");

        jLabel11.setText("Username");

        jLabel12.setText("Sex");

        btnsubmit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnsubmit.setText("Submit");
        btnsubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnsubmitMouseEntered(evt);
            }
        });
        btnsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsubmitActionPerformed(evt);
            }
        });

        btnClare.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnClare.setText("Clear");
        btnClare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClareActionPerformed(evt);
            }
        });

        btnpaspt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnpaspt.setText("Passport");
        btnpaspt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnpasptMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnpasptMouseExited(evt);
            }
        });
        btnpaspt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpasptActionPerformed(evt);
            }
        });

        btnDelte.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDelte.setText("Delete");
        btnDelte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelteActionPerformed(evt);
            }
        });

        btnupdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        signature.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        signature.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        signature.setBorder(new javax.swing.border.MatteBorder(null));
        signature.setPreferredSize(new java.awt.Dimension(56, 2));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Signature");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Signature");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(btnsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(14, 14, 14)
                .addComponent(btnpaspt, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelte, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClare, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel12))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel5)
                                        .addGap(40, 40, 40)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(signature, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(14, 14, 14))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel6))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(tt)
                                                        .addGap(53, 53, 53)
                                                        .addComponent(cstname, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel2)
                                                        .addGap(18, 18, 18)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(Csex, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(cstdob, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(58, 58, 58)
                                                                .addComponent(activeness))))))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabel10)
                                                .addGap(26, 26, 26)
                                                .addComponent(custcode, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(16, 16, 16)
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cstusername, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(65, 65, 65)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3))
                                        .addGap(0, 8, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cstmob)
                            .addComponent(pin)
                            .addComponent(cstEmail)
                            .addComponent(cpassport, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(custcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cstusername, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11))
                    .addComponent(pin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tt)
                    .addComponent(jLabel4)
                    .addComponent(cstname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cstEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel2))
                                .addComponent(jLabel6)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(activeness))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addComponent(cstmob, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cstdob, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(36, 36, 36))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Csex, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(signature, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(cpassport, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnpaspt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(4, 4, 4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cstmobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cstmobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cstmobActionPerformed

    private void TblcdetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TblcdetailsMouseClicked
        //displaying the table content on the textfields and labels on click on the table
        int i =   Tblcdetails.getSelectedRow();
        TableModel model =   Tblcdetails.getModel();
        // txtid.setText(model.getValueAt(i,0).toString());
        cstname.setText(model.getValueAt(i,2).toString());
        Csex.setSelectedItem(model.getValueAt(i,3).toString());
        custcode.setText(model.getValueAt(i,0).toString());
        // ps.setString(4, date);
        cstEmail.setText(model.getValueAt(i,5).toString());
        cstmob.setText(model.getValueAt(i,6).toString());
        Adress.setText(model.getValueAt(i,7).toString());
        String active = (model.getValueAt(i,8).toString());
        if(active.equals("Active")){

            activeness.setSelected(true);}else
        {activeness.setSelected(false);}
     

        //cstusername.setText(model.getValueAt(i,13).toString());
        // pin.setText(model.getValueAt(i,14).toString());

       

        String tc = Tblcdetails.getModel().getValueAt(i, 0).toString();
        String sql = "select DOB,Passport,Signature from customertable where CustomerID = '"+custcode.getText()+"'";
        try {
            ps = con.prepareStatement(sql);

            rs = ps.executeQuery();
            // byte[] img = null;
            if (rs.next()){

                String date = rs.getString("DOB");
                ( (JTextField)cstdob.getDateEditor().getUiComponent()).setText(date);
 byte[] img = null;
                 img =  rs.getBytes("Passport");
                                ImageIcon image1 = new ImageIcon(img);
                                Image im1 = image1.getImage();
                                Image myImg1 = im1.getScaledInstance(    cpassport.getWidth(),    cpassport.getHeight(),Image.SCALE_SMOOTH);
                                ImageIcon newImage1 = new ImageIcon(myImg1);
                                 cpassport.setIcon(newImage1);
                               
                

                byte[] imge = null;

                imge =  rs.getBytes("Signature");
                ImageIcon imag = new ImageIcon(imge);
                Image im = imag.getImage();
                Image myImg = im.getScaledInstance(   signature.getWidth(),   signature.getHeight(),Image.SCALE_SMOOTH);
                ImageIcon newImage = new ImageIcon(myImg);

                signature.setIcon(newImage);

            }
        } catch (SQLException ex) {
            Logger.getLogger(customerdetails.class.getName()).log(Level.SEVERE, null, ex);
        }

        
//        if( cpassport.getIcon() != null || cpassport.getIcon() == null){
//           btnpaspt.setText("Passport");
//
//        }else{
//            btnpaspt.setText("Signature");
//       }
//       

        // ps.setBytes(11, photo);
        // if (activeness.setAction(active))
        //paspt.getIcon((model.getValueAt(i,4).toString());

    }//GEN-LAST:event_TblcdetailsMouseClicked

    private void btnsubmitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnsubmitMouseEntered
        // the surfix for the account no and the customerid
        //account surffix
        q1 = "35";
        //customer suffix
        custcode.setText(q2 = "CST-");
        //password

        pin.setText(q3="");
    }//GEN-LAST:event_btnsubmitMouseEntered

    private void btnsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsubmitActionPerformed
        //Account number generator

        num1 = 1+ (int)(Math.random() * 100000000 );
        q1 += num1;

        //for the CustomerID
        num2 = 1+ (int)(Math.random() * 100035 );
        q2 += num2;
        custcode.setText(q2);
        //automatic pin generator
        num3 =  1+ (int)(Math.random() * 10000 );
        q3 += num3;
        pin.setText(q3);

        //Customer Activeness variable declaration
        String active = null;

        if(activeness.isSelected()== true){

            active = "Active";

        }else
        { active ="Not Active";
        }

        int Conf = JOptionPane.showConfirmDialog(this, "Are you sure you want save this Record?", "Comfirmation",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(cstname.getText().equals("") ||Csex.getSelectedItem().equals("Select Sex")||cstmob.getText().equals("") ||cstEmail .getText().equals("") || cstdob.getDate().equals("") ||
            custcode.getText().equals("") ||   Adress.getText().equals("") ||cstusername.getText().equals("")) {

            JOptionPane.showMessageDialog(this,"Some Field are not filled, Fill them up to continue");

        }
        else if (cpassport.getIcon()== null){
            JOptionPane.showMessageDialog(this,"NO Image Selected");
        }
        else if (signature.getIcon()== null){
            JOptionPane.showMessageDialog(this,"NO Signture Selected");
        }
        else {
            try {
                //checking if username already exist or not
                String user = "select COUNT(*) AS total from customertable where Username = ? ";
                ps = con.prepareStatement(user);
                ps.setString(1, cstusername.getText());
               
                // ps.setString(1, pin.getText());

                rs = ps.executeQuery();
                while(rs.next()){

                    if(rs.getInt("total")>0){
                        JOptionPane.showMessageDialog(this,"This Username  already exist in the database");
                    } else{

                        try {
                            String date = ((JTextField)cstdob.getDateEditor().getUiComponent()).getText();
                            // TODO add your handling code here:
                            String sql = "INSERT INTO `customertable`( `CustomerID`,AccountNO,`Name`,`Sex`, `DOB`, `EmailID`, `MobileNo`, `Address`, `CustomerActiveness` ,AccountBalance, `Username`, `PIN`, `Passport`,`Signature`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                            ps = con.prepareStatement(sql);

                            ps.setString(1, custcode.getText());
                            ps.setString(2, q1);
                            ps.setString(3, cstname.getText());
                            ps.setString(4, Csex.getSelectedItem().toString());
                            ps.setString(5, date);
                            ps.setString(6, cstEmail.getText());
                            ps.setString( 7,cstmob.getText());
                            ps.setString(8, Adress.getText());

                            ps.setString(9, active);
                          
                            ps.setDouble(10, 0);
                            ps.setString(11, cstusername.getText());
                            ps.setString(12,String.valueOf(pin.getPassword()));
                            ps.setBytes(13, photo);
                            ps.setBytes(14, photo2);
                            if(Conf == JOptionPane.YES_OPTION)  {

                                int n1 = ps.executeUpdate();
                                if (n1>0){
                                    JOptionPane.showMessageDialog(null, "Record was Submitted Sucessfully");
                                    fetchdata();
                              
                                       
                                }
                            }else{}

                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, "Record  Submission failed,\nthis could be caused by oversized image, \nmake sure the image is not more than 1MB");
                            Logger.getLogger(employee.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(customerdetails.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_btnsubmitActionPerformed

    private void btnClareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClareActionPerformed
        // clear

        cstname.setText("");
        Csex.setSelectedItem("Select Sex");
        custcode.setText("");
        // ps.setString(4, date);
        cstEmail.setText("");
        cstmob.setText("");
        Adress.setText("");

        activeness.setSelected(false);

        cstusername.setText("");
        pin.setText("");

        signature.setIcon(null);
        cpassport.setIcon(null);
         btnpaspt.setText("Passport");

    }//GEN-LAST:event_btnClareActionPerformed

    private void btnpasptMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnpasptMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_btnpasptMouseEntered

    private void btnpasptMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnpasptMouseExited
        // changing the text written on the uploading button on mouse exit
//      if( cpassport.getIcon()== null){         
//          btnpaspt.setText("Passport");
//       }else{
//           btnpaspt.setText("Signature");
//        }

//      if(signature.getIcon() != null){
//         btnpaspt.setText("Passport");
//      }else{
//       btnpaspt.setText("Signature");}
    }//GEN-LAST:event_btnpasptMouseExited
public ImageIcon ResizeImage(String ImagePath){
ImageIcon Myimage = new ImageIcon(ImagePath);
Image img = Myimage.getImage();
Image newImg = img.getScaledInstance(cpassport.getWidth(),cpassport.getHeight() ,Image.SCALE_SMOOTH);
ImageIcon image = new ImageIcon(newImg);
return image;



}
    private void btnpasptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpasptActionPerformed
        //uploading the image and signatures into the label
        //cpassport.setSize(30, 40);
        //signature.setSize(30, 15);

    //cpassport.setBounds(10, 10, 200, 250);
       
            // uploading picture
        
            
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new File (System.getProperty("user.home")));
            FileNameExtensionFilter filter = new FileNameExtensionFilter("* .images", "jpg","gif","png");
            chooser.addChoosableFileFilter(filter);
            int result = chooser.showSaveDialog(null);
            if(result ==JFileChooser.APPROVE_OPTION){
            
            File f = chooser.getSelectedFile();
            filename = f.getAbsolutePath();
            
               
           cpassport.setIcon(ResizeImage(filename));
           
            
            }else if (result == JFileChooser.CANCEL_OPTION){
            System.out.println("No image selected");}
            
            
            try{
                File image =new File (filename);
                FileInputStream fis = new FileInputStream(image);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                byte [] buf = new byte [1024];
                for (int readNum; (readNum = fis.read(buf))!= -1;){
                    bos.write(buf,0,readNum);

                }
                //the photo is declared as global variable at the botton page
                photo = bos.toByteArray();
            

            }catch (Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
            
        
    }//GEN-LAST:event_btnpasptActionPerformed

    private void btnDelteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelteActionPerformed
        // TODO add your handling code here:
        int conf = JOptionPane.showConfirmDialog(this, "Are you Sure you want to delete this Record? Record will be deleted permanently from the database, click Yes to continue", "Warning",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        try {
            ps = con.prepareStatement("DELETE FROM customertable  WHERE CustomerID = '"+ custcode.getText() +"'");

            if(conf == JOptionPane.YES_OPTION){
                int n1 =  ps.executeUpdate();
                if (n1>0){

                    JOptionPane.showMessageDialog(null, "Deleted Successful");
                    fetchdata();
                }
            }else{}

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Delete not Successful");
            Logger.getLogger(employee.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDelteActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed

        String active = null;

        if(activeness.isSelected()== true){

            active = "Active";

        }else
        { active ="Not Active";
        }
        String Value1 = cstname.getText();
        String Value2 = Csex.getSelectedItem().toString();
        String Value3 = cstEmail.getText();
        String Value4 = cstmob.getText();
        String Value5 =  Adress.getText();
      
        String Value7 =  cstusername.getText();

        String Value8 = custcode.getText();
        int conf = JOptionPane.showConfirmDialog(this, "Are you Sure you want to Modify this Record?", "Confirmation Required",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        cstdob.setDate(java.sql.Date.valueOf(java.time.LocalDate.now()));
        String date = ((JTextField)cstdob.getDateEditor().getUiComponent()).getText();

        //validation and submission

        if(Value1.equals("")|| Value2.equals("") || Value3.equals("") || Value4.equals("")|| Value5.equals("") || cstdob.getDate().equals(""))
        {
            JOptionPane.showMessageDialog(this," Some field are missing,please fill them to continue" );

        }

        else if (cpassport.getIcon()==null){
            JOptionPane.showMessageDialog(this," No Image Selected" );

        }

        else if (signature.getIcon()== null){
            JOptionPane.showMessageDialog(this,"NO Signature Selected");
        }
        else{

            try {
                // TODO add your handling code here:
                String qry ="UPDATE `customertable` SET `Name`=?,`Sex`= ?,`DOB`= ?,`EmailID`=?,`MobileNo`=?,`Address`=?,`CustomerActiveness`=?,`Passport`=?,`Signature` = ? WHERE CustomerID = ?";
                ps = con.prepareStatement(qry);
         ps.setString(1, Value1);
          ps.setString(2, Value2);
           ps.setString(3, date);
            ps.setString(4, Value3);
              ps.setString(5, Value4);
               ps.setString(6, Value5);
                ps.setString(7,active  );
           
             ps.setBytes(8, photo);
               ps.setBytes(9, photo2);
                  ps.setString(10, Value8);           
           
         
                if(conf ==JOptionPane.YES_OPTION){
                    int n1 = ps.executeUpdate();
                    if (n1>0){
                        JOptionPane.showMessageDialog(null, "Record was Updated Sucessfully");
                        fetchdata();
                        //returning the text on the uploading button to passport
                                       
                    }
                }else{}

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Record Update failed,\nthis could be caused by oversized image, \nmake sure the image is not more than 1MB");
                Logger.getLogger(employee.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btnupdateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // upload Signature
         JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new File (System.getProperty("user.home")));
            FileNameExtensionFilter filter = new FileNameExtensionFilter("* .images", "jpg","gif","png");
            chooser.addChoosableFileFilter(filter);
            int result = chooser.showSaveDialog(null);
            if(result ==JFileChooser.APPROVE_OPTION){
            
            File f = chooser.getSelectedFile();
            filename2 = f.getAbsolutePath();
            
               
           signature.setIcon(ResizeImage(filename2));
           
            
            }else if (result == JFileChooser.CANCEL_OPTION){
            System.out.println("No image selected");}
            //filename is also declared as a global variable at the botton page
            
            //txtid.setText(filename);
            try{
                File image =new File (filename2);
                FileInputStream fis = new FileInputStream(image);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                byte [] buf = new byte [1024];
                for (int readNum; (readNum = fis.read(buf))!= -1;){
                    bos.write(buf,0,readNum);

                }
                //the photo is declared as global variable at the botton page
                photo2 = bos.toByteArray();
            

            }catch (Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
            
            
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Adress;
    private javax.swing.JComboBox<String> Csex;
    private javax.swing.JTable Tblcdetails;
    private javax.swing.JCheckBox activeness;
    private javax.swing.JButton btnClare;
    private javax.swing.JButton btnDelte;
    private javax.swing.JButton btnpaspt;
    private javax.swing.JButton btnsubmit;
    private javax.swing.JButton btnupdate;
    private javax.swing.JLabel cpassport;
    private javax.swing.JTextField cstEmail;
    private com.toedter.calendar.JDateChooser cstdob;
    private javax.swing.JTextField cstmob;
    private javax.swing.JTextField cstname;
    private javax.swing.JTextField cstusername;
    private javax.swing.JTextField custcode;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPasswordField pin;
    private javax.swing.JLabel signature;
    private javax.swing.JLabel tt;
    // End of variables declaration//GEN-END:variables
byte[] photo = null;
String filename = null;
byte[] photo2 = null;
String filename2 = null;

}
